$ ls
Cargo.lock  Cargo.toml  src


$ cat Cargo.toml
[package]
name = "fp1"
version = "0.1.0"
authors = ["Jewoo Lee <shema7k@gmail.com>"]
edition = "2018"

[[bin]]
name = "create_file"
path = "src/create_file.rs"

[[bin]]
name = "apply"
path = "src/apply.rs"

[dependencies]
clap = "2.33"
tempfile = "3.0"

$ ls src
apply.rs  common.rs  create_file.rs


$ cat src/common.rs
#![allow(dead_code)]

pub const KEY_LEN: usize = 5;
pub const NAME_LEN: usize = 15;
pub const ADDR_LEN: usize = 60;
pub const CAR_LEN: usize = 15;
pub const WORK_LEN: usize = 12;
pub const PHONE_LEN: usize = 9;
pub const CODE_LEN: usize = 1;
pub const FILLER_LEN: usize = 2;

pub const MASTER_RECORD_LEN: usize =
    KEY_LEN + NAME_LEN + ADDR_LEN + CAR_LEN + WORK_LEN + PHONE_LEN + FILLER_LEN;
pub const TRANSACTION_RECORD_LEN: usize = MASTER_RECORD_LEN + CODE_LEN;

pub const KEY_INDEX: usize = 0;
pub const NAME_INDEX: usize = KEY_INDEX + KEY_LEN;
pub const ADDR_INDEX: usize = NAME_INDEX + NAME_LEN;
pub const CAR_INDEX: usize = ADDR_INDEX + ADDR_LEN;
pub const WORK_INDEX: usize = CAR_INDEX + CAR_LEN;
pub const PHONE_INDEX: usize = WORK_INDEX + WORK_LEN;
pub const MASTER_FILLER_INDEX: usize = PHONE_INDEX + PHONE_LEN;
pub const CODE_INDEX: usize = PHONE_INDEX + PHONE_LEN;
pub const TRANSACTION_FILLER_INDEX: usize = CODE_INDEX + CODE_LEN;


$ cat src/create_file.rs
#[macro_use]
extern crate clap;

use std::ffi::OsStr;
use std::fs::File;
use std::io::prelude::*;
use std::io::{self, BufWriter};

mod common;
use common::*;

macro_rules! read_field {
    ($record:ident, $buf:ident, $input:ident, $output:ident, $main:tt, $len:expr, $idx:expr, $end:expr, $field:expr) => {
        $buf.clear();
        let i = $input
            .by_ref()
            .take(($len as u64) + 1)
            .read_until($end, &mut $buf)?;
        if i == 0 {
            break $main;
        }
        if i == $len + 1 && $buf[i - 1] != $end {
            writeln!(
                $output,
                concat!($field, " was too long (Max {} bytes). Please try again."),
                $len
            )?;
            $output.flush()?;
            continue;
        }
        if $buf.last() == Some(&$end) {
            $buf.pop();
        }
        $record[$idx..($idx + $buf.len())].copy_from_slice(&$buf);
    };
}

#[allow(clippy::cyclomatic_complexity)]
fn main() -> io::Result<()> {
    let args = clap_app!(solution =>
        (version: "0.9")
        (author: "Me <shema7k@gmail.com>")
        (about: "Does what you asked me to do (mostly)")
        (@arg output: -o --output +takes_value "Set output file's path. If not specified, output is saved to ./out.")
        (@group mode !required =>
            (@arg master: -m --master "Create master file. (default)")
            (@arg transaction: -t --transaction "Create transaction file.")
        )
    ).get_matches();

    let transaction_mode = args.is_present("transaction");

    let mut file = BufWriter::new(File::create(
        if let Some(path) = args.value_of_os("output") {
            path
        } else {
            OsStr::new("out")
        },
    )?);

    let stdin = io::stdin();
    let mut stdin = stdin.lock();
    let stdout = io::stdout();
    let mut stdout = stdout.lock();

    writeln!(
        stdout,
        "\
         Enter records in the following format:\n\
         > <key> <name>\n\
         + <address>\n\
         + <car> <work> <contact>{}\n\
         No field other than address may contain spaces.\n\
         Enter EOF (Ctrl-D) to end input.\
         ",
        if transaction_mode { " <code>" } else { "" }
    )?;

    let mut buf = Vec::new();
    'main: loop {
        let mut record = [0; TRANSACTION_RECORD_LEN]; // Actually, should be max(MASTER_RECORD_LEN, TRANSACTION_RECORD_LEN)
        loop {
            write!(stdout, "> ")?;
            stdout.flush()?;

            read_field!(record, buf, stdin, stdout, 'main, KEY_LEN, KEY_INDEX, b' ', "Key");
            read_field!(record, buf, stdin, stdout, 'main, NAME_LEN, NAME_INDEX, b'\n', "Name");

            break;
        }
        loop {
            write!(stdout, "+ ")?;
            stdout.flush()?;

            read_field!(record, buf, stdin, stdout, 'main, ADDR_LEN, ADDR_INDEX, b'\n', "Address");

            break;
        }
        loop {
            write!(stdout, "+ ")?;
            stdout.flush()?;
            read_field!(record, buf, stdin, stdout, 'main, CAR_LEN, CAR_INDEX, b' ', "Car name");
            read_field!(record, buf, stdin, stdout, 'main, WORK_LEN, WORK_INDEX, b' ', "Workplace name");
            read_field!(record, buf, stdin, stdout, 'main, PHONE_LEN, PHONE_INDEX, if transaction_mode { b' ' } else { b'\n' }, "Contact");

            if transaction_mode {
                read_field!(record, buf, stdin, stdout, 'main, CODE_LEN, CODE_INDEX, b'\n', "Transaction code");
            }

            break;
        }
        file.write_all(
            &record[..if transaction_mode {
                TRANSACTION_RECORD_LEN
            } else {
                MASTER_RECORD_LEN
            }],
        )?;
    }

    Ok(())
}


$ cat src/apply.rs 
#[macro_use]
extern crate clap;

use std::fs::File;
use std::io::prelude::*;
use std::io::{self, BufReader, BufWriter};
use tempfile::NamedTempFile;

mod common;
use common::*;

fn main() -> io::Result<()> {
    let args = clap_app!(solution =>
        (version: "0.9")
        (author: "Me <shema7k@gmail.com>")
        (about: "Does what you asked me to do (mostly)")
        (@arg master: -m --master +takes_value +required "Master file to be updated.")
        (@arg transaction: -t --transaction +takes_value +required "Transaction file to be applied.")
        (@arg output: -o --output +takes_value "Set new master file's path. If not specified, output will overwrite master file.")
    ).get_matches();

    let master_path = args.value_of_os("master").unwrap();
    let trans_path = args.value_of_os("transaction").unwrap();
    let output_path = if let Some(output_path) = args.value_of_os("output") {
        output_path
    } else {
        master_path
    };

    let mut out = BufWriter::new(NamedTempFile::new()?);
    let stdout = io::stdout();
    let mut stdout = stdout.lock();
    let stderr = io::stderr();
    let mut stderr = stderr.lock();

    let mut master = BufReader::new(File::open(master_path)?);
    let mut trans = BufReader::new(File::open(trans_path)?);

    let mut master_buf = None;
    let mut trans_buf = [0; TRANSACTION_RECORD_LEN];

    let mut trans_number = 0u64;

    while read_record(&mut trans, &mut trans_buf)? {
        trans_number += 1;
        match trans_buf[CODE_INDEX] {
            0 | 6 | b'0' | b'6' => insert_record(
                &mut master,
                &mut master_buf,
                trans_number,
                trans_buf,
                &mut out,
                &mut stdout,
                &mut stderr,
            )?,
            1 | b'1' => update_record(
                &mut master,
                &mut master_buf,
                trans_number,
                trans_buf,
                (CAR_INDEX, CAR_LEN),
                &mut out,
                &mut stdout,
                &mut stderr,
            )?,
            2 | b'2' => delete_record(
                &mut master,
                &mut master_buf,
                trans_number,
                trans_buf,
                &mut out,
                &mut stdout,
                &mut stderr,
            )?,
            3 | b'3' => update_record(
                &mut master,
                &mut master_buf,
                trans_number,
                trans_buf,
                (ADDR_INDEX, ADDR_LEN),
                &mut out,
                &mut stdout,
                &mut stderr,
            )?,
            4 | b'4' => update_record(
                &mut master,
                &mut master_buf,
                trans_number,
                trans_buf,
                (PHONE_INDEX, PHONE_LEN),
                &mut out,
                &mut stdout,
                &mut stderr,
            )?,
            5 | b'5' => update_record(
                &mut master,
                &mut master_buf,
                trans_number,
                trans_buf,
                (WORK_INDEX, WORK_LEN),
                &mut out,
                &mut stdout,
                &mut stderr,
            )?,
            unknown => {
                writeln!(
                    stderr,
                    "Error: Unknown transaction code {} at transaction {}",
                    unknown, trans_number,
                )?;
            }
        }
    }

    if let Some(ref mut buf) = master_buf {
        loop {
            out.write_all(&*buf)?;
            pretty_print(&mut stdout, &*buf)?;
            if !read_record(&mut master, buf)? {
                break;
            }
        }
    }

    drop(master);
    drop(trans);
    out.into_inner()?.persist(output_path)?;

    Ok(())
}

fn read_record<R: Read>(r: &mut R, mut buf: &mut [u8]) -> io::Result<bool> {
    let mut read = false;
    while !buf.is_empty() {
        match r.read(buf) {
            Ok(0) => {
                return if read {
                    Err(io::Error::from(io::ErrorKind::UnexpectedEof))
                } else {
                    Ok(false)
                };
            }
            Ok(n) => {
                read = true;
                buf = &mut buf[n..];
            }
            Err(ref e) if e.kind() == io::ErrorKind::Interrupted => continue,
            Err(e) => return Err(e),
        }
    }
    Ok(true)
}

fn insert_record<R, W1, W2, W3>(
    master_file: &mut R,
    master_buf: &mut Option<[u8; MASTER_RECORD_LEN]>,
    transaction_number: u64,
    transaction: [u8; TRANSACTION_RECORD_LEN],
    output: &mut W1,
    digest: &mut W2,
    error: &mut W3,
) -> io::Result<()>
where
    R: Read + Seek,
    W1: Write,
    W2: Write,
    W3: Write,
{
    skip_records(master_file, master_buf, transaction, output, digest)?;
    match *master_buf {
        None => {
            let mut buf = [0; MASTER_RECORD_LEN];
            buf[..CODE_INDEX].copy_from_slice(&transaction[..CODE_INDEX]);
            *master_buf = Some(buf);
        }
        Some(ref mut buf) => {
            if buf[KEY_INDEX..(KEY_INDEX + KEY_LEN)]
                == transaction[KEY_INDEX..(KEY_INDEX + KEY_LEN)]
            {
                writeln!(
                    error,
                    "Error: Insert with already existing key {} at transaction {}",
                    String::from_utf8_lossy(&transaction[KEY_INDEX..(KEY_INDEX + KEY_LEN)]),
                    transaction_number,
                )?;
            } else {
                master_file.seek(io::SeekFrom::Current(-(MASTER_RECORD_LEN as i64)))?;
                buf[..CODE_INDEX].copy_from_slice(&transaction[..CODE_INDEX]);
            }
        }
    }
    Ok(())
}

#[allow(clippy::too_many_arguments)]
fn update_record<R, W1, W2, W3>(
    master_file: &mut R,
    master_buf: &mut Option<[u8; MASTER_RECORD_LEN]>,
    transaction_number: u64,
    transaction: [u8; TRANSACTION_RECORD_LEN],
    edit_region: (usize, usize),
    output: &mut W1,
    digest: &mut W2,
    error: &mut W3,
) -> io::Result<()>
where
    R: Read + Seek,
    W1: Write,
    W2: Write,
    W3: Write,
{
    skip_records(master_file, master_buf, transaction, output, digest)?;
    match *master_buf {
        Some(ref mut buf)
            if buf[KEY_INDEX..(KEY_INDEX + KEY_LEN)]
                == transaction[KEY_INDEX..(KEY_INDEX + KEY_LEN)] =>
        {
            let start = edit_region.0;
            let end = edit_region.0 + edit_region.1;
            if buf[..start] != transaction[..start]
                || buf[end..MASTER_FILLER_INDEX] != transaction[end..CODE_INDEX]
            {
                writeln!(
                    error,
                    "Error: Update with non-matching field(s) at transaction {}",
                    transaction_number,
                )?;
            } else {
                buf[start..end].copy_from_slice(&transaction[start..end]);
            }
        }
        _ => {
            writeln!(
                error,
                "Error: Update with non-existing key {} at transaction {}",
                String::from_utf8_lossy(&transaction[KEY_INDEX..(KEY_INDEX + KEY_LEN)]),
                transaction_number,
            )?;
        }
    }
    Ok(())
}

fn delete_record<R, W1, W2, W3>(
    master_file: &mut R,
    master_buf: &mut Option<[u8; MASTER_RECORD_LEN]>,
    transaction_number: u64,
    transaction: [u8; TRANSACTION_RECORD_LEN],
    output: &mut W1,
    digest: &mut W2,
    error: &mut W3,
) -> io::Result<()>
where
    R: Read + Seek,
    W1: Write,
    W2: Write,
    W3: Write,
{
    skip_records(master_file, master_buf, transaction, output, digest)?;
    match *master_buf {
        Some(ref mut buf)
            if buf[KEY_INDEX..(KEY_INDEX + KEY_LEN)]
                == transaction[KEY_INDEX..(KEY_INDEX + KEY_LEN)] =>
        {   
            if buf[..MASTER_FILLER_INDEX] == transaction[..CODE_INDEX] {
                *master_buf = None;
            } else {
                writeln!(
                    error,
                    "Error: Delete with non-matching field(s) at transaction {}",
                    transaction_number,
                )?;
            }
        }
        _ => {
            writeln!(
                error,
                "Error: Delete with non-existing key {} at transaction {}",
                String::from_utf8_lossy(&transaction[KEY_INDEX..(KEY_INDEX + KEY_LEN)]),
                transaction_number,
            )?;
        }
    }
    Ok(())
}

fn skip_records<R, W1, W2>(
    master_file: &mut R,
    master_buf: &mut Option<[u8; MASTER_RECORD_LEN]>,
    transaction: [u8; TRANSACTION_RECORD_LEN],
    output: &mut W1,
    digest: &mut W2,
) -> io::Result<()>
where
    R: Read + Seek,
    W1: Write,
    W2: Write,
{
    let buf = match *master_buf {
        None => {
            let mut buf = [0; MASTER_RECORD_LEN];
            if !read_record(master_file, &mut buf)? {
                return Ok(());
            }
            *master_buf = Some(buf);
            master_buf.as_mut().unwrap()
        }
        Some(ref mut buf) => buf,
    };
    while buf[KEY_INDEX..(KEY_INDEX + KEY_LEN)] < transaction[KEY_INDEX..(KEY_INDEX + KEY_LEN)] {
        output.write_all(&*buf)?;
        pretty_print(digest, &*buf)?;
        if !read_record(master_file, buf)? {
            *master_buf = None;
            return Ok(());
        }
    }
    Ok(())
}

fn pretty_print<W: Write>(digest: &mut W, record: &[u8; MASTER_RECORD_LEN]) -> io::Result<()> {
    writeln!(
        digest,
        "{} {} {} {} {} {}",
        String::from_utf8_lossy(&record[KEY_INDEX..(KEY_INDEX + KEY_LEN)]).trim_end_matches('\0'),
        String::from_utf8_lossy(&record[NAME_INDEX..(NAME_INDEX + NAME_LEN)])
            .trim_end_matches('\0'),
        String::from_utf8_lossy(&record[ADDR_INDEX..(ADDR_INDEX + ADDR_LEN)])
            .trim_end_matches('\0'),
        String::from_utf8_lossy(&record[CAR_INDEX..(CAR_INDEX + CAR_LEN)]).trim_end_matches('\0'),
        String::from_utf8_lossy(&record[WORK_INDEX..(WORK_INDEX + WORK_LEN)])
            .trim_end_matches('\0'),
        String::from_utf8_lossy(&record[PHONE_INDEX..(PHONE_INDEX + PHONE_LEN)])
            .trim_end_matches('\0'),
    )
}

$ cargo build --release --bin create_file && cargo build --release --bin apply
   Compiling libc v0.2.53
   # ... A bunch of other dependencies being built ...
   Compiling clap v2.33.0
   Compiling tempfile v3.0.7
   Compiling fp1 v0.1.0 (...)
    Finished release [optimized] target(s) in 9.17s
   Compiling fp1 v0.1.0 (...)
    Finished release [optimized] target(s) in 0.73s


$ target/release/create_file -m -o master
Enter records in the following format:
> <key> <name>
+ <address>
+ <car> <work> <contact>
No field other than address may contain spaces.
Enter EOF (Ctrl-D) to end input.
> 20001 김현종
+ 서울시 송파구 잠실동 잠실주공APT 308-207
+ 자가용 서울상사 423-9087
> 20005 강민우
+ 서울시 강동구 성내2동 111-30 22/9
+ 자가용 조흥은행 890-1297
> 20010 석준희
+ 서울시 동대문구 회기동 16-1 2/1
+ 트럭 하나기획 987-1254
> 20017 손민수
+ 서울시 중랑구 중화동 292-10
+ 봉고 광주고속 567-1234
> 20025 박성재
+ 경기도 성남시 상대원2동 3855
+ 트럭 성남인쇄 23-7890
> 20031 이병철
+ 경기도 성남시 수진1동 885
+ 자가용 삼성물산 878-7447
> 20035 한장준
+ 서울시 관악구 봉천4동 877-29
+ 자가용 대흥주식 765-0912
> 20039 최윤발
+ 서울시 서초구 반포동 경남APT 1-206
+ 자가용 현대 432-6789
> 20043 이국영
+ 서울시 성동구 용답동 55-3
+ 버스 영진주식 560-9812
> 20048 김덕화
+ 서울시 종로구 숭인동 20-154 45/34
+ 봉고 대신증권 

$ target/release/create_file -t -o transaction
Enter records in the following format:
> <key> <name>
+ <address>
+ <car> <work> <contact> <code>
No field other than address may contain spaces.
Enter EOF (Ctrl-D) to end input.
> 20001 김현종
+ 서울시 송파구 잠실동 잠실주공APT 308-207
+ 소나타 서울상사 423-9087 1
> 20003 김영호
+ 서울시 강남구 역삼동 34-678
+ 포니 대콤 345-9876 0
> 20005 강민우
+ 서울시 강동구 성내2동 111-30 22/9
+ 액셀 조흥은행 890-1297 2
> 20010 석준희
+ 서울시 동대문구 전농동 123-78 23/1
+ 트럭 하나기획 987-1254 3
> 20015 최인수
+ 경기도 성남시 복정동 산 56
+ 봉고 고흥무역 234-9087 0
> 20017 손민수
+ 서울시 중랑구 중화동 292-10
+ 그레이스 광주고속 678-5679 4
> 20025 박성재
+ 경기도 성남시 상대원2동 3855
+ 타이탄 경기인쇄 23-7890 5
> 20027 김수식
+ 서울시 종로구 숭인동 569-45 34/12
+ 그랜저 상업은행 123-5698 5
> 20051 이제우
+ 경기도 용인시 에버랜드
+ 발 무직 999-9999 0

$ ls
Cargo.lock  Cargo.toml  master  src  target  transaction


$ hd master
00000000  32 30 30 30 31 ea b9 80  ed 98 84 ec a2 85 00 00  |20001...........|
00000010  00 00 00 00 ec 84 9c ec  9a b8 ec 8b 9c 20 ec 86  |............. ..|
00000020  a1 ed 8c 8c ea b5 ac 20  ec 9e a0 ec 8b a4 eb 8f  |....... ........|
00000030  99 20 ec 9e a0 ec 8b a4  ec a3 bc ea b3 b5 41 50  |. ............AP|
00000040  54 20 33 30 38 2d 32 30  37 00 00 00 00 00 00 00  |T 308-207.......|
00000050  ec 9e 90 ea b0 80 ec 9a  a9 00 00 00 00 00 00 ec  |................|
00000060  84 9c ec 9a b8 ec 83 81  ec 82 ac 34 32 33 2d 39  |...........423-9|
00000070  30 38 37 00 00 00 32 30  30 30 35 ea b0 95 eb af  |087...20005.....|
00000080  bc ec 9a b0 00 00 00 00  00 00 ec 84 9c ec 9a b8  |................|
00000090  ec 8b 9c 20 ea b0 95 eb  8f 99 ea b5 ac 20 ec 84  |... ......... ..|
000000a0  b1 eb 82 b4 32 eb 8f 99  20 31 31 31 2d 33 30 20  |....2... 111-30 |
000000b0  32 32 2f 39 00 00 00 00  00 00 00 00 00 00 00 00  |22/9............|
000000c0  00 00 00 00 00 00 ec 9e  90 ea b0 80 ec 9a a9 00  |................|
000000d0  00 00 00 00 00 ec a1 b0  ed 9d a5 ec 9d 80 ed 96  |................|
000000e0  89 38 39 30 2d 31 32 39  37 00 00 00 32 30 30 31  |.890-1297...2001|
000000f0  30 ec 84 9d ec a4 80 ed  9d ac 00 00 00 00 00 00  |0...............|
00000100  ec 84 9c ec 9a b8 ec 8b  9c 20 eb 8f 99 eb 8c 80  |......... ......|
00000110  eb ac b8 ea b5 ac 20 ed  9a 8c ea b8 b0 eb 8f 99  |...... .........|
00000120  20 31 36 2d 31 20 32 2f  31 00 00 00 00 00 00 00  | 16-1 2/1.......|
00000130  00 00 00 00 00 00 00 00  00 00 00 00 ed 8a b8 eb  |................|
00000140  9f ad 00 00 00 00 00 00  00 00 00 ed 95 98 eb 82  |................|
00000150  98 ea b8 b0 ed 9a 8d 39  38 37 2d 31 32 35 34 00  |.......987-1254.|
00000160  00 00 32 30 30 31 37 ec  86 90 eb af bc ec 88 98  |..20017.........|
00000170  00 00 00 00 00 00 ec 84  9c ec 9a b8 ec 8b 9c 20  |............... |
00000180  ec a4 91 eb 9e 91 ea b5  ac 20 ec a4 91 ed 99 94  |......... ......|
00000190  eb 8f 99 20 32 39 32 2d  31 30 00 00 00 00 00 00  |... 292-10......|
000001a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000001b0  00 00 eb b4 89 ea b3 a0  00 00 00 00 00 00 00 00  |................|
000001c0  00 ea b4 91 ec a3 bc ea  b3 a0 ec 86 8d 35 36 37  |.............567|
000001d0  2d 31 32 33 34 00 00 00  32 30 30 32 35 eb b0 95  |-1234...20025...|
000001e0  ec 84 b1 ec 9e ac 00 00  00 00 00 00 ea b2 bd ea  |................|
000001f0  b8 b0 eb 8f 84 20 ec 84  b1 eb 82 a8 ec 8b 9c 20  |..... ......... |
00000200  ec 83 81 eb 8c 80 ec 9b  90 32 eb 8f 99 20 33 38  |.........2... 38|
00000210  35 35 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |55..............|
00000220  00 00 00 00 00 00 00 00  ed 8a b8 eb 9f ad 00 00  |................|
00000230  00 00 00 00 00 00 00 ec  84 b1 eb 82 a8 ec 9d b8  |................|
00000240  ec 87 84 32 33 2d 37 38  39 30 00 00 00 00 32 30  |...23-7890....20|
00000250  30 33 31 ec 9d b4 eb b3  91 ec b2 a0 00 00 00 00  |031.............|
00000260  00 00 ea b2 bd ea b8 b0  eb 8f 84 20 ec 84 b1 eb  |........... ....|
00000270  82 a8 ec 8b 9c 20 ec 88  98 ec a7 84 31 eb 8f 99  |..... ......1...|
00000280  20 38 38 35 00 00 00 00  00 00 00 00 00 00 00 00  | 885............|
00000290  00 00 00 00 00 00 00 00  00 00 00 00 00 00 ec 9e  |................|
000002a0  90 ea b0 80 ec 9a a9 00  00 00 00 00 00 ec 82 bc  |................|
000002b0  ec 84 b1 eb ac bc ec 82  b0 38 37 38 2d 37 34 34  |.........878-744|
000002c0  37 00 00 00 32 30 30 33  35 ed 95 9c ec 9e a5 ec  |7...20035.......|
000002d0  a4 80 00 00 00 00 00 00  ec 84 9c ec 9a b8 ec 8b  |................|
000002e0  9c 20 ea b4 80 ec 95 85  ea b5 ac 20 eb b4 89 ec  |. ......... ....|
000002f0  b2 9c 34 eb 8f 99 20 38  37 37 2d 32 39 00 00 00  |..4... 877-29...|
00000300  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000310  00 00 00 00 ec 9e 90 ea  b0 80 ec 9a a9 00 00 00  |................|
00000320  00 00 00 eb 8c 80 ed 9d  a5 ec a3 bc ec 8b 9d 37  |...............7|
00000330  36 35 2d 30 39 31 32 00  00 00 32 30 30 33 39 ec  |65-0912...20039.|
00000340  b5 9c ec 9c a4 eb b0 9c  00 00 00 00 00 00 ec 84  |................|
00000350  9c ec 9a b8 ec 8b 9c 20  ec 84 9c ec b4 88 ea b5  |....... ........|
00000360  ac 20 eb b0 98 ed 8f ac  eb 8f 99 20 ea b2 bd eb  |. ......... ....|
00000370  82 a8 41 50 54 20 31 2d  32 30 36 00 00 00 00 00  |..APT 1-206.....|
00000380  00 00 00 00 00 00 00 00  00 00 ec 9e 90 ea b0 80  |................|
00000390  ec 9a a9 00 00 00 00 00  00 ed 98 84 eb 8c 80 00  |................|
000003a0  00 00 00 00 00 34 33 32  2d 36 37 38 39 00 00 00  |.....432-6789...|
000003b0  32 30 30 34 33 ec 9d b4  ea b5 ad ec 98 81 00 00  |20043...........|
000003c0  00 00 00 00 ec 84 9c ec  9a b8 ec 8b 9c 20 ec 84  |............. ..|
000003d0  b1 eb 8f 99 ea b5 ac 20  ec 9a a9 eb 8b b5 eb 8f  |....... ........|
000003e0  99 20 35 35 2d 33 00 00  00 00 00 00 00 00 00 00  |. 55-3..........|
000003f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000400  eb b2 84 ec 8a a4 00 00  00 00 00 00 00 00 00 ec  |................|
00000410  98 81 ec a7 84 ec a3 bc  ec 8b 9d 35 36 30 2d 39  |...........560-9|
00000420  38 31 32 00 00 00 32 30  30 34 38 ea b9 80 eb 8d  |812...20048.....|
00000430  95 ed 99 94 00 00 00 00  00 00 ec 84 9c ec 9a b8  |................|
00000440  ec 8b 9c 20 ec a2 85 eb  a1 9c ea b5 ac 20 ec 88  |... ......... ..|
00000450  ad ec 9d b8 eb 8f 99 20  32 30 2d 31 35 34 20 34  |....... 20-154 4|
00000460  35 2f 33 34 00 00 00 00  00 00 00 00 00 00 00 00  |5/34............|
00000470  00 00 00 00 00 00 eb b4  89 ea b3 a0 00 00 00 00  |................|
00000480  00 00 00 00 00 eb 8c 80  ec 8b a0 ec a6 9d ea b6  |................|
00000490  8c 00 00 00 00 00 00 00  00 00 00 00              |............|
0000049c

 
$ hd transaction 
00000000  32 30 30 30 31 ea b9 80  ed 98 84 ec a2 85 00 00  |20001...........|
00000010  00 00 00 00 ec 84 9c ec  9a b8 ec 8b 9c 20 ec 86  |............. ..|
00000020  a1 ed 8c 8c ea b5 ac 20  ec 9e a0 ec 8b a4 eb 8f  |....... ........|
00000030  99 20 ec 9e a0 ec 8b a4  ec a3 bc ea b3 b5 41 50  |. ............AP|
00000040  54 20 33 30 38 2d 32 30  37 00 00 00 00 00 00 00  |T 308-207.......|
00000050  ec 86 8c eb 82 98 ed 83  80 00 00 00 00 00 00 ec  |................|
00000060  84 9c ec 9a b8 ec 83 81  ec 82 ac 34 32 33 2d 39  |...........423-9|
00000070  30 38 37 00 31 00 00 32  30 30 30 33 ea b9 80 ec  |087.1..20003....|
00000080  98 81 ed 98 b8 00 00 00  00 00 00 ec 84 9c ec 9a  |................|
00000090  b8 ec 8b 9c 20 ea b0 95  eb 82 a8 ea b5 ac 20 ec  |.... ......... .|
000000a0  97 ad ec 82 bc eb 8f 99  20 33 34 2d 36 37 38 00  |........ 34-678.|
000000b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000000c0  00 00 00 00 00 00 00 ed  8f ac eb 8b 88 00 00 00  |................|
000000d0  00 00 00 00 00 00 eb 8c  80 ec bd a4 00 00 00 00  |................|
000000e0  00 00 33 34 35 2d 39 38  37 36 00 30 00 00 32 30  |..345-9876.0..20|
000000f0  30 30 35 ea b0 95 eb af  bc ec 9a b0 00 00 00 00  |005.............|
00000100  00 00 ec 84 9c ec 9a b8  ec 8b 9c 20 ea b0 95 eb  |........... ....|
00000110  8f 99 ea b5 ac 20 ec 84  b1 eb 82 b4 32 eb 8f 99  |..... ......2...|
00000120  20 31 31 31 2d 33 30 20  32 32 2f 39 00 00 00 00  | 111-30 22/9....|
00000130  00 00 00 00 00 00 00 00  00 00 00 00 00 00 ec 95  |................|
00000140  a1 ec 85 80 00 00 00 00  00 00 00 00 00 ec a1 b0  |................|
00000150  ed 9d a5 ec 9d 80 ed 96  89 38 39 30 2d 31 32 39  |.........890-129|
00000160  37 00 32 00 00 32 30 30  31 30 ec 84 9d ec a4 80  |7.2..20010......|
00000170  ed 9d ac 00 00 00 00 00  00 ec 84 9c ec 9a b8 ec  |................|
00000180  8b 9c 20 eb 8f 99 eb 8c  80 eb ac b8 ea b5 ac 20  |.. ............ |
00000190  ec a0 84 eb 86 8d eb 8f  99 20 31 32 33 2d 37 38  |......... 123-78|
000001a0  20 32 33 2f 31 00 00 00  00 00 00 00 00 00 00 00  | 23/1...........|
000001b0  00 00 00 00 00 ed 8a b8  eb 9f ad 00 00 00 00 00  |................|
000001c0  00 00 00 00 ed 95 98 eb  82 98 ea b8 b0 ed 9a 8d  |................|
000001d0  39 38 37 2d 31 32 35 34  00 33 00 00 32 30 30 31  |987-1254.3..2001|
000001e0  35 ec b5 9c ec 9d b8 ec  88 98 00 00 00 00 00 00  |5...............|
000001f0  ea b2 bd ea b8 b0 eb 8f  84 20 ec 84 b1 eb 82 a8  |......... ......|
00000200  ec 8b 9c 20 eb b3 b5 ec  a0 95 eb 8f 99 20 ec 82  |... ......... ..|
00000210  b0 20 35 36 00 00 00 00  00 00 00 00 00 00 00 00  |. 56............|
00000220  00 00 00 00 00 00 00 00  00 00 00 00 eb b4 89 ea  |................|
00000230  b3 a0 00 00 00 00 00 00  00 00 00 ea b3 a0 ed 9d  |................|
00000240  a5 eb ac b4 ec 97 ad 32  33 34 2d 39 30 38 37 00  |.......234-9087.|
00000250  30 00 00 32 30 30 31 37  ec 86 90 eb af bc ec 88  |0..20017........|
00000260  98 00 00 00 00 00 00 ec  84 9c ec 9a b8 ec 8b 9c  |................|
00000270  20 ec a4 91 eb 9e 91 ea  b5 ac 20 ec a4 91 ed 99  | ......... .....|
00000280  94 eb 8f 99 20 32 39 32  2d 31 30 00 00 00 00 00  |.... 292-10.....|
00000290  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000002a0  00 00 00 ea b7 b8 eb a0  88 ec 9d b4 ec 8a a4 00  |................|
000002b0  00 00 ea b4 91 ec a3 bc  ea b3 a0 ec 86 8d 36 37  |..............67|
000002c0  38 2d 35 36 37 39 00 34  00 00 32 30 30 32 35 eb  |8-5679.4..20025.|
000002d0  b0 95 ec 84 b1 ec 9e ac  00 00 00 00 00 00 ea b2  |................|
000002e0  bd ea b8 b0 eb 8f 84 20  ec 84 b1 eb 82 a8 ec 8b  |....... ........|
000002f0  9c 20 ec 83 81 eb 8c 80  ec 9b 90 32 eb 8f 99 20  |. .........2... |
00000300  33 38 35 35 00 00 00 00  00 00 00 00 00 00 00 00  |3855............|
00000310  00 00 00 00 00 00 00 00  00 00 ed 83 80 ec 9d b4  |................|
00000320  ed 83 84 00 00 00 00 00  00 ea b2 bd ea b8 b0 ec  |................|
00000330  9d b8 ec 87 84 32 33 2d  37 38 39 30 00 00 35 00  |.....23-7890..5.|
00000340  00 32 30 30 32 37 ea b9  80 ec 88 98 ec 8b 9d 00  |.20027..........|
00000350  00 00 00 00 00 ec 84 9c  ec 9a b8 ec 8b 9c 20 ec  |.............. .|
00000360  a2 85 eb a1 9c ea b5 ac  20 ec 88 ad ec 9d b8 eb  |........ .......|
00000370  8f 99 20 35 36 39 2d 34  35 20 33 34 2f 31 32 00  |.. 569-45 34/12.|
00000380  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000390  00 ea b7 b8 eb 9e 9c ec  a0 80 00 00 00 00 00 00  |................|
000003a0  ec 83 81 ec 97 85 ec 9d  80 ed 96 89 31 32 33 2d  |............123-|
000003b0  35 36 39 38 00 35 00 00  32 30 30 35 31 ec 9d b4  |5698.5..20051...|
000003c0  ec a0 9c ec 9a b0 00 00  00 00 00 00 ea b2 bd ea  |................|
000003d0  b8 b0 eb 8f 84 20 ec 9a  a9 ec 9d b8 ec 8b 9c 20  |..... ......... |
000003e0  ec 97 90 eb b2 84 eb 9e  9c eb 93 9c 00 00 00 00  |................|
000003f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000400  00 00 00 00 00 00 00 00  eb b0 9c 00 00 00 00 00  |................|
00000410  00 00 00 00 00 00 00 eb  ac b4 ec a7 81 00 00 00  |................|
00000420  00 00 00 39 39 39 2d 39  39 39 39 00 30 00 00     |...999-9999.0..|
0000042f


$ target/release/apply -m master -t transaction -o new_master
20001 김현종 서울시 송파구 잠실동 잠실주공APT 308-207 소나타 서울상사 423-9087
20003 김영호 서울시 강남구 역삼동 34-678 포니 대콤 345-9876
Error: Delete with non-matching field(s) at transaction 3
20005 강민우 서울시 강동구 성내2동 111-30 22/9 자가용 조흥은행 890-1297
20010 석준희 서울시 동대문구 전농동 123-78 23/1 트럭 하나기획 987-1254
20015 최인수 경기도 성남시 복정동 산 56 봉고 고흥무역 234-9087
Error: Update with non-matching field(s) at transaction 6
20017 손민수 서울시 중랑구 중화동 292-10 봉고 광주고속 567-1234
Error: Update with non-matching field(s) at transaction 7
20025 박성재 경기도 성남시 상대원2동 3855 트럭 성남인쇄 23-7890
Error: Update with non-existing key 20027 at transaction 8
20031 이병철 경기도 성남시 수진1동 885 자가용 삼성물산 878-7447
20035 한장준 서울시 관악구 봉천4동 877-29 자가용 대흥주식 765-0912
20039 최윤발 서울시 서초구 반포동 경남APT 1-206 자가용 현대 432-6789
20043 이국영 서울시 성동구 용답동 55-3 버스 영진주식 560-9812
20048 김덕화 서울시 종로구 숭인동 20-154 45/34 봉고 대신증권 
20051 이제우 경기도 용인시 에버랜드 발 무직 999-9999


$ ls
Cargo.lock  Cargo.toml  master  new_master  src  target  transaction


$ hd new_master
00000000  32 30 30 30 31 ea b9 80  ed 98 84 ec a2 85 00 00  |20001...........|
00000010  00 00 00 00 ec 84 9c ec  9a b8 ec 8b 9c 20 ec 86  |............. ..|
00000020  a1 ed 8c 8c ea b5 ac 20  ec 9e a0 ec 8b a4 eb 8f  |....... ........|
00000030  99 20 ec 9e a0 ec 8b a4  ec a3 bc ea b3 b5 41 50  |. ............AP|
00000040  54 20 33 30 38 2d 32 30  37 00 00 00 00 00 00 00  |T 308-207.......|
00000050  ec 86 8c eb 82 98 ed 83  80 00 00 00 00 00 00 ec  |................|
00000060  84 9c ec 9a b8 ec 83 81  ec 82 ac 34 32 33 2d 39  |...........423-9|
00000070  30 38 37 00 00 00 32 30  30 30 33 ea b9 80 ec 98  |087...20003.....|
00000080  81 ed 98 b8 00 00 00 00  00 00 ec 84 9c ec 9a b8  |................|
00000090  ec 8b 9c 20 ea b0 95 eb  82 a8 ea b5 ac 20 ec 97  |... ......... ..|
000000a0  ad ec 82 bc eb 8f 99 20  33 34 2d 36 37 38 00 00  |....... 34-678..|
000000b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000000c0  00 00 00 00 00 00 ed 8f  ac eb 8b 88 00 00 00 00  |................|
000000d0  00 00 00 00 00 eb 8c 80  ec bd a4 00 00 00 00 00  |................|
000000e0  00 33 34 35 2d 39 38 37  36 00 00 00 32 30 30 30  |.345-9876...2000|
000000f0  35 ea b0 95 eb af bc ec  9a b0 00 00 00 00 00 00  |5...............|
00000100  ec 84 9c ec 9a b8 ec 8b  9c 20 ea b0 95 eb 8f 99  |......... ......|
00000110  ea b5 ac 20 ec 84 b1 eb  82 b4 32 eb 8f 99 20 31  |... ......2... 1|
00000120  31 31 2d 33 30 20 32 32  2f 39 00 00 00 00 00 00  |11-30 22/9......|
00000130  00 00 00 00 00 00 00 00  00 00 00 00 ec 9e 90 ea  |................|
00000140  b0 80 ec 9a a9 00 00 00  00 00 00 ec a1 b0 ed 9d  |................|
00000150  a5 ec 9d 80 ed 96 89 38  39 30 2d 31 32 39 37 00  |.......890-1297.|
00000160  00 00 32 30 30 31 30 ec  84 9d ec a4 80 ed 9d ac  |..20010.........|
00000170  00 00 00 00 00 00 ec 84  9c ec 9a b8 ec 8b 9c 20  |............... |
00000180  eb 8f 99 eb 8c 80 eb ac  b8 ea b5 ac 20 ec a0 84  |............ ...|
00000190  eb 86 8d eb 8f 99 20 31  32 33 2d 37 38 20 32 33  |...... 123-78 23|
000001a0  2f 31 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |/1..............|
000001b0  00 00 ed 8a b8 eb 9f ad  00 00 00 00 00 00 00 00  |................|
000001c0  00 ed 95 98 eb 82 98 ea  b8 b0 ed 9a 8d 39 38 37  |.............987|
000001d0  2d 31 32 35 34 00 00 00  32 30 30 31 35 ec b5 9c  |-1254...20015...|
000001e0  ec 9d b8 ec 88 98 00 00  00 00 00 00 ea b2 bd ea  |................|
000001f0  b8 b0 eb 8f 84 20 ec 84  b1 eb 82 a8 ec 8b 9c 20  |..... ......... |
00000200  eb b3 b5 ec a0 95 eb 8f  99 20 ec 82 b0 20 35 36  |......... ... 56|
00000210  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000220  00 00 00 00 00 00 00 00  eb b4 89 ea b3 a0 00 00  |................|
00000230  00 00 00 00 00 00 00 ea  b3 a0 ed 9d a5 eb ac b4  |................|
00000240  ec 97 ad 32 33 34 2d 39  30 38 37 00 00 00 32 30  |...234-9087...20|
00000250  30 31 37 ec 86 90 eb af  bc ec 88 98 00 00 00 00  |017.............|
00000260  00 00 ec 84 9c ec 9a b8  ec 8b 9c 20 ec a4 91 eb  |........... ....|
00000270  9e 91 ea b5 ac 20 ec a4  91 ed 99 94 eb 8f 99 20  |..... ......... |
00000280  32 39 32 2d 31 30 00 00  00 00 00 00 00 00 00 00  |292-10..........|
00000290  00 00 00 00 00 00 00 00  00 00 00 00 00 00 eb b4  |................|
000002a0  89 ea b3 a0 00 00 00 00  00 00 00 00 00 ea b4 91  |................|
000002b0  ec a3 bc ea b3 a0 ec 86  8d 35 36 37 2d 31 32 33  |.........567-123|
000002c0  34 00 00 00 32 30 30 32  35 eb b0 95 ec 84 b1 ec  |4...20025.......|
000002d0  9e ac 00 00 00 00 00 00  ea b2 bd ea b8 b0 eb 8f  |................|
000002e0  84 20 ec 84 b1 eb 82 a8  ec 8b 9c 20 ec 83 81 eb  |. ......... ....|
000002f0  8c 80 ec 9b 90 32 eb 8f  99 20 33 38 35 35 00 00  |.....2... 3855..|
00000300  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000310  00 00 00 00 ed 8a b8 eb  9f ad 00 00 00 00 00 00  |................|
00000320  00 00 00 ec 84 b1 eb 82  a8 ec 9d b8 ec 87 84 32  |...............2|
00000330  33 2d 37 38 39 30 00 00  00 00 32 30 30 33 31 ec  |3-7890....20031.|
00000340  9d b4 eb b3 91 ec b2 a0  00 00 00 00 00 00 ea b2  |................|
00000350  bd ea b8 b0 eb 8f 84 20  ec 84 b1 eb 82 a8 ec 8b  |....... ........|
00000360  9c 20 ec 88 98 ec a7 84  31 eb 8f 99 20 38 38 35  |. ......1... 885|
00000370  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000380  00 00 00 00 00 00 00 00  00 00 ec 9e 90 ea b0 80  |................|
00000390  ec 9a a9 00 00 00 00 00  00 ec 82 bc ec 84 b1 eb  |................|
000003a0  ac bc ec 82 b0 38 37 38  2d 37 34 34 37 00 00 00  |.....878-7447...|
000003b0  32 30 30 33 35 ed 95 9c  ec 9e a5 ec a4 80 00 00  |20035...........|
000003c0  00 00 00 00 ec 84 9c ec  9a b8 ec 8b 9c 20 ea b4  |............. ..|
000003d0  80 ec 95 85 ea b5 ac 20  eb b4 89 ec b2 9c 34 eb  |....... ......4.|
000003e0  8f 99 20 38 37 37 2d 32  39 00 00 00 00 00 00 00  |.. 877-29.......|
000003f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000400  ec 9e 90 ea b0 80 ec 9a  a9 00 00 00 00 00 00 eb  |................|
00000410  8c 80 ed 9d a5 ec a3 bc  ec 8b 9d 37 36 35 2d 30  |...........765-0|
00000420  39 31 32 00 00 00 32 30  30 33 39 ec b5 9c ec 9c  |912...20039.....|
00000430  a4 eb b0 9c 00 00 00 00  00 00 ec 84 9c ec 9a b8  |................|
00000440  ec 8b 9c 20 ec 84 9c ec  b4 88 ea b5 ac 20 eb b0  |... ......... ..|
00000450  98 ed 8f ac eb 8f 99 20  ea b2 bd eb 82 a8 41 50  |....... ......AP|
00000460  54 20 31 2d 32 30 36 00  00 00 00 00 00 00 00 00  |T 1-206.........|
00000470  00 00 00 00 00 00 ec 9e  90 ea b0 80 ec 9a a9 00  |................|
00000480  00 00 00 00 00 ed 98 84  eb 8c 80 00 00 00 00 00  |................|
00000490  00 34 33 32 2d 36 37 38  39 00 00 00 32 30 30 34  |.432-6789...2004|
000004a0  33 ec 9d b4 ea b5 ad ec  98 81 00 00 00 00 00 00  |3...............|
000004b0  ec 84 9c ec 9a b8 ec 8b  9c 20 ec 84 b1 eb 8f 99  |......... ......|
000004c0  ea b5 ac 20 ec 9a a9 eb  8b b5 eb 8f 99 20 35 35  |... ......... 55|
000004d0  2d 33 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |-3..............|
000004e0  00 00 00 00 00 00 00 00  00 00 00 00 eb b2 84 ec  |................|
000004f0  8a a4 00 00 00 00 00 00  00 00 00 ec 98 81 ec a7  |................|
00000500  84 ec a3 bc ec 8b 9d 35  36 30 2d 39 38 31 32 00  |.......560-9812.|
00000510  00 00 32 30 30 34 38 ea  b9 80 eb 8d 95 ed 99 94  |..20048.........|
00000520  00 00 00 00 00 00 ec 84  9c ec 9a b8 ec 8b 9c 20  |............... |
00000530  ec a2 85 eb a1 9c ea b5  ac 20 ec 88 ad ec 9d b8  |......... ......|
00000540  eb 8f 99 20 32 30 2d 31  35 34 20 34 35 2f 33 34  |... 20-154 45/34|
00000550  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000560  00 00 eb b4 89 ea b3 a0  00 00 00 00 00 00 00 00  |................|
00000570  00 eb 8c 80 ec 8b a0 ec  a6 9d ea b6 8c 00 00 00  |................|
00000580  00 00 00 00 00 00 00 00  32 30 30 35 31 ec 9d b4  |........20051...|
00000590  ec a0 9c ec 9a b0 00 00  00 00 00 00 ea b2 bd ea  |................|
000005a0  b8 b0 eb 8f 84 20 ec 9a  a9 ec 9d b8 ec 8b 9c 20  |..... ......... |
000005b0  ec 97 90 eb b2 84 eb 9e  9c eb 93 9c 00 00 00 00  |................|
000005c0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000005d0  00 00 00 00 00 00 00 00  eb b0 9c 00 00 00 00 00  |................|
000005e0  00 00 00 00 00 00 00 eb  ac b4 ec a7 81 00 00 00  |................|
000005f0  00 00 00 39 39 39 2d 39  39 39 39 00 00 00        |...999-9999...|
000005fe

